#+AUTHOR: Bob Uhl
#+TITLE: declare
#+SUBTITLE: A Common Lisp implementation for dynamic languages
* Introduction
  Dynamic languages such as Lua, Python and JavaScript have become
  increasingly popular over the past decade and more.  They tend to
  offer a reliable core set of services: memory management, safe
  strings & smart types, among others (these were all available in
  Common Lisp in 1994); what they tend not to offer is metaprogramming
  and optional strong typing.  Beneath their superficial differences,
  these languages share certain strong similarities (of course,
  beneath those similarities, they have some pretty strong
  differences…) and it should be possible to write a Common Lisp
  implementation which takes advantage of their memory management and
  similar dictionary/hash table/associative array implementations.

  declare is that implementation.
** Genesis
  I conceived of the idea for declare while playing with
  [[http://www.computercraft.info/][ComputerCraft]], a /really/ nifty Minecraft mod which adds computers
  (programmable in Lua) to Minecraft.  Although the mod is really cool
  and a lot of fun, CraftOS is fairly limited.  In particular, it'd be
  awesome to have computers scattered across the world, talking to one
  another, and be able to control all of them from one terminal.  It
  occurred to me that what'd be really neat would be an OS like Plan
  9, which excelled at dynamically creating namespaces across multiple
  machines.

  I started working on PlanMine (name…not great), but I soon
  encountered an issue: two basic building blocks of POSIX & Plan 9
  systems are ~fork()~ & ~exec()~, Lua's coroutines don't support such
  a use-case (coroutines in general can't; one needs to compile a
  ~fork()/exec()~-supporting language down to a coroutine-supporting
  language).  Nor, really, is Lua all that pleasant to program in.
  It's not a bad language at all, but it's unusual (one-based arrays,
  no integers until recently, verbose block syntax) and of course it's
  not Common Lisp.  So it struck me: rather than write a Lua-to-Lua
  compiler to support what I needed, why not right a Lisp-to-Lua
  compiler instead, and be able to write most of my OS in a nicer
  language?

  My first try was exactly that: compiling Common Lisp down to Lua.
  The problem I encountered is that this became /extremely/ verbose:
  lots and lots of nested functions using Lua's ~function (args) …
  end~ syntax.  My next try was an interpreter, written in
  continuation-passing-style (CPS) approach, but writing a large
  program in CPS is brutal.  So I switched to a bytecode compiler, and
  here we are.

  As I worked on this, I realised that much of the same work could be
  reused in an implementation running atop JavaScript or Python.
** Goals
  1. A Common Lisp implementation for Lua
  2. Support for writing an OS-like underlay capable of supporting
     multiprocessing & privileges
  3. A Common Lisp implementation for JavaScript
  4. A Common Lisp implementation for Python
** Acknowledgements
  I owe a /huge/ debt to CLISP, particularly for the bytecode I chose.
  Although my implementation of choice is SBCL, CLISP really is nice;
  one could do worse than to choose it.
* Design
** Bytecode
** <<Design:Lisp objects>>Lisp objects
   Lisp objects are represented as native implementation objects.
   Each object has an associated class, which determines what
   can be done with that object.
** Supporting library
* Implementation
The most important thing in a Lisp implementation is a REPL: if one
has even a minimal REPL, one can implement more in a gradual manner.
And the initial part of a REPL is ~READ~; the ~PRINT~ portion is
fairly simple, and the loop portion is simplicity itself.  Why not
write a basic ~READ~, then a compiler to turn it into bytecode, then
the necessary support to execute it, then implement ~EVAL~ using the
already-written compiler?  It practically writes itself!

With that in mind, my first step is to get to that working ~READ~.
But to get /there/, I need to lay some groundwork: ~READ~ needs to be
passed input, and it needs to produce output; and its components need
to be able to work on intermediate data. The very first thing to do is
to specify a few classes.
** Basic classes

Recall from [[Design:Lisp objects][the discussion of Lisp objects]] that every object has an
associated class.  We need to represent these classes as objects
themselves.  Classes are properly named with symbols, but we don't
have symbols yet.  So, the ~class~ package will create classes named
with strings; later on each will be renamed with the appropriate
symbol.

#+NAME: classes-header :exports none
#+BEGIN_SRC lua
  local classes = {}
  package.loaded["classes"] = classes
#+END_SRC

#+NAME: classes-footer :exports none
#+BEGIN_SRC lua
  return classes
#+END_SRC

*** T
#+NAME: classes-t
#+BEGIN_SRC lua
  classes.T = {}
  classes.T["class-precedence-list"] = {classes.T}
#+END_SRC

~T~ is the superclass of every class, including itself.

*** BUILT-IN-CLASS
#+NAME: classes-built-in-class
#+BEGIN_SRC lua
  classes["BUILT-IN-CLASS"] = { ["class-precedence-list"] = {classes.T} }
#+END_SRC

~BUILT-IN-CLASS~ represents declare-internal classes; these may not be
manually created by the user, and may have special internal representations.

**** Built-in classes
#+NAME: classes-built-in-classes
#+BEGIN_SRC lua
  classes['HASH-TABLE'] = {
     class = classes['BUILT-IN-CLASS'],
     class_precedence_list = {classes.T}
  }
  classes["RANDOM-STATE"] = {
     class = classes["BUILT-IN-CLASS"],
     class_precedence_list = {classes.T}
  }
  classes.RESTART = {
     class = classes["BUILT-IN-CLASS"],
     class_precedence_list = {classes.T}
  }
  classes.PACKAGE = {
     class = classes["BUILT-IN-CLASS"],
     class_precedence_list = {classes.T}
  }
  classes.READTABLE = {
     class = classes["BUILT-IN-CLASS"],
     class_precedence_list = {classes.T}
  }
  classes.SYMBOL = {
     class = classes["BUILT-IN-CLASS"],
     class_precedence_list = {classes.T}
  }
  classes.CHARACTER = {
     class = classes["BUILT-IN-CLASS"],
     class_precedence_list = {classes.T}
  }
  -- functions
  classes.FUNCTION = {
     class = classes["BUILT-IN-CLASS"],
     class_precedence_list = {classes.T}
  }
  classes["COMPILED-FUNCTION"] = {
     class = classes["BUILT-IN-CLASS"],
     class_precedence_list = {classes.FUNCTION, classes.T}
  }
  -- sequences
  classes.SEQUENCE = {
     class = classes["BUILT-IN-CLASS"],
     class_precedence_list = {classes.T}
  }
  classes.LIST = {
     class = classes["BUILT-IN-CLASS"],
     class_precedence_list = {classes.SEQUENCE, classes.T}
  }
  classes.CONS = {
     class = classes["BUILT-IN-CLASS"],
     class_precedence_list = {classes.LIST, classes.SEQUENCE, classes.T}
  }
  classes.NULL = {
     class = classes["BUILT-IN-CLASS"],
     class_precedence_list = {classes.SYMBOL, classes.LIST, classes.SEQUENCE, classes.T}
  }
  -- streams
  classes.STREAM = {
     class = classes["BUILT-IN-CLASS"],
     class_precedence_list = {classes.T}
  }
  classes["STRING-STREAM"] = {
     class = classes["BUILT-IN-CLASS"],
     class_precedence_list = {classes.STREAM, classes.T}
  }
  -- pathnames
  classes.PATHNAME = {
     class = classes["BUILT-IN-CLASS"],
     class_precedence_list = {classes.T}
  }
  classes["LOGICAL-PATHNAME"] = {
     class = classes["BUILT-IN-CLASS"],
     class_precedence_list = {classes.PATHNAME, classes.T}
  }
  -- numbers
  classes.NUMBER = {
     class = classes["BUILT-IN-CLASS"],
     class_precedence_list = {classes.T}
  }
  classes.REAL = {
     class = classes["BUILT-IN-CLASS"],
     class_precedence_list = {classes.NUMBER, classes.T}
  }
  classes.FLOAT = {
     class = classes["BUILT-IN-CLASS"],
     class_precedence_list = {classes.REAL, classes.NUMBER, classes.T}
  }
  classes["SINGLE-FLOAT"] = {
     class = classes["BUILT-IN-CLASS"],
     class_precedence_list = {
        classes.FLOAT, classes.REAL, classes.NUMBER, classes.T
     }
  }
  classes.RATIONAL = {
     class = classes["BUILT-IN-CLASS"],
     class_precedence_list = {classes.REAL, classes.NUMBER, classes.T}
  }
  classes.RATIO = {
     class = classes["BUILT-IN-CLASS"],
     class_precedence_list = {
        classes.RATIONAL, classes.REAL, classes.NUMBER, classes.T
     }
  }
  classes.INTEGER = {
     class = classes["BUILT-IN-CLASS"],
     class_precedence_list = {
        classes.RATIONAL, classes.REAL, classes.NUMBER, classes.T
     }
  }
  classes.COMPLEX = {
     class = classes["BUILT-IN-CLASS"],
     class_precedence_list = {classes.NUMBER, classes.T}
  }
#+END_SRC

*** STANDARD-OBJECT
The class ~STANDARD-OBJECT~ is an instance of its own subclass,
~STANDARD-CLASS~

#+NAME: classes-standard-object
#+BEGIN_SRC lua
  classes["STANDARD-OBJECT"] = { ["class-precedence-list"] = { classes.T } }
#+END_SRC
*** STANDARD-CLASS
The class ~STANDARD-CLASS~ represents a standard Common Lisp Object System
(CLOS) class, with slots and all.

#+NAME: classes-standard-class
#+BEGIN_SRC lua
  classes["CLASS"] = {
     ["class-precedence-list"] = { classes["STANDARD-OBJECT"], classes.T }
  }
  classes["STANDARD-CLASS"] = {
     ["class-precedence-list"] = {
        classes.CLASS, classes["STANDARD-OBJECT"], classes.T
     }
  }
#+END_SRC

~STANDARD-OBJECT~, ~CLASS~ and ~STANDARD-CLASS~ are all instances of
~STANDARD-CLASS~, which means that they may be subclassed with
~DEFCLASS~.

#+NAME: classes-standard-class-set-subclasses
#+BEGIN_SRC lua
  classes["STANDARD-OBJECT"].class = classes['STANDARD-CLASS']
  classes.CLASS.class = classes['STANDARD-CLASS']
  classes["STANDARD-CLASS"].class = classes['STANDARD-CLASS']
#+END_SRC

#+NAME: classes
#+BEGIN_SRC lua :tangle classes.lua :exports none :noweb yes
  <<classes-header>>
  <<classes-t>>
  classes.T.class = classes["BUILT-IN-CLASS"]
  <<classes-built-in-class>>
  <<classes-built-in-classes>>
  <<classes-standard-object>>
  <<classes-standard-class>>
  <<classes-set-standard-class-subclasses>>
  <<classes-footer>>
#+END_SRC
** NIL

NIL is a special value, distinguished from Lua's nil.  It looks like a
cons, but its ~CAR~ and ~CDR~ always point to itself.

#+NAME: NIL
#+BEGIN_SRC lua
NIL = {}
NIL.car = NIL
NIL.cdr = NIL
#+END_SRC
** Symbols
Symbols are very simple: they consist of a name, a package, a property
list and a value.

#+NAME: symbol
#+BEGIN_SRC lua :tangle symbol.lua
  classes = require("classes")
  local symbol = {}
  package.loaded["symbol"] = symbol

  local Symbol = {}

  function symbol.new(name, package)
     local self = {
        class = classes.SYMBOL,
        name = name,
        package = package,
        plist = NIL,
     }
     setmetatable(self, { __index = Symbol })
     return self
  end

  return symbol
#+END_SRC

** Packages
Packages are namespaces which map symbol names to symbols.  There is a
single namespace for packages themselves in each process environment.

#+BEGIN_SRC lua :tangle clpackage.lua :noweb yes
    classes = require("classes")
    symbols = require("symbol")
    local clpackage = {}
    package.loaded["clpackage"] = clpackage

    local packages = {}
    local Package = {}

    -- NAME must be a string; NICKNAMES must be an array of strings; USE
    -- must be an array of packages.
    function clpackage.new(name, nicknames, use)
       local self = {
          class = classes.PACKAGE,
          name = name,
          nicknames = nicknames,
          use = use,
          internal_symbols = {},
          external_symbols = {},
       }
       setmetatable(self, { __index = Package })
       return self
    end

    -- set up COMMON-LISP, a package which cannot be modified; since it is
    -- static, it can be referred to from multiple toplevels
    clpackage.cl = clpackage.new("COMMON-LISP", { "CL" })
    -- set up the standard Common Lisp symbols
    for i, name in ipairs({ "&ALLOW-OTHER-KEYS",
                            "*PRINT-MISER-WIDTH*",
                            "&AUX",
                            "*PRINT-PPRINT-DISPATCH*",
                            "&BODY",
                            "*PRINT-PRETTY*",
                            "&ENVIRONMENT",
                            "*PRINT-RADIX*",
                            "&KEY",
                            "*PRINT-READABLY*",
                            "&OPTIONAL",
                            "*PRINT-RIGHT-MARGIN*",
                            "&REST",
                            "*QUERY-IO*",
                            "&WHOLE",
                            "*RANDOM-STATE*",
                            "*",
                            "*READ-BASE*",
                            "**",
                            "*READ-DEFAULT-FLOAT-FORMAT*",
                            "***",
                            "*READ-EVAL*",
                            "*BREAK-ON-SIGNALS*",
                            "*READ-SUPPRESS*",
                            "*COMPILE-FILE-PATHNAME*",
                            "*READTABLE*",
                            "*COMPILE-FILE-TRUENAME*",
                            "*STANDARD-INPUT*",
                            "*COMPILE-PRINT*",
                            "*STANDARD-OUTPUT*",
                            "*COMPILE-VERBOSE*",
                            "*TERMINAL-IO*",
                            "*DEBUG-IO*",
                            "*TRACE-OUTPUT*",
                            "*DEBUGGER-HOOK*",
                            "+",
                            "*DEFAULT-PATHNAME-DEFAULTS*",
                            "++",
                            "*ERROR-OUTPUT*",
                            "+++",
                            "*FEATURES*",
                            "-",
                            "*GENSYM-COUNTER*",
                            "/",
                            "*LOAD-PATHNAME*",
                            "//",
                            "*LOAD-PRINT*",
                            "///",
                            "*LOAD-TRUENAME*",
                            "/=",
                            "*LOAD-VERBOSE*",
                            "1+",
                            "*MACROEXPAND-HOOK*",
                            "1-",
                            "*MODULES*",
                            "<",
                            "*PACKAGE*",
                            "<=",
                            "*PRINT-ARRAY*",
                            "=",
                            "*PRINT-BASE*",
                            ">",
                            "*PRINT-CASE*",
                            ">=",
                            "*PRINT-CIRCLE*",
                            "ABORT",
                            "*PRINT-ESCAPE*",
                            "ABS",
                            "*PRINT-GENSYM*",
                            "ACONS",
                            "*PRINT-LENGTH*",
                            "ACOS",
                            "*PRINT-LEVEL*",
                            "ACOSH",
                            "*PRINT-LINES*",
                            "ADD-METHOD",
                            "ADJOIN",
                            "ATOM",
                            "BOUNDP",
                            "ADJUST-ARRAY",
                            "BASE-CHAR",
                            "BREAK",
                            "ADJUSTABLE-ARRAY-P",
                            "BASE-STRING",
                            "BROADCAST-STREAM",
                            "ALLOCATE-INSTANCE",
                            "BIGNUM",
                            "BROADCAST-STREAM-STREAMS",
                            "ALPHA-CHAR-P",
                            "BIT",
                            "BUILT-IN-CLASS",
                            "ALPHANUMERICP",
                            "BIT-AND",
                            "BUTLAST",
                            "AND",
                            "BIT-ANDC1",
                            "BYTE",
                            "APPEND",
                            "BIT-ANDC2",
                            "BYTE-POSITION",
                            "APPLY",
                            "BIT-EQV",
                            "BYTE-SIZE",
                            "APROPOS",
                            "BIT-IOR",
                            "CAAAAR",
                            "APROPOS-LIST",
                            "BIT-NAND",
                            "CAAADR",
                            "AREF",
                            "BIT-NOR",
                            "CAAAR",
                            "ARITHMETIC-ERROR",
                            "BIT-NOT",
                            "CAADAR",
                            "ARITHMETIC-ERROR-OPERANDS",
                            "BIT-ORC1",
                            "CAADDR",
                            "ARITHMETIC-ERROR-OPERATION",
                            "BIT-ORC2",
                            "CAADR",
                            "ARRAY",
                            "BIT-VECTOR",
                            "CAAR",
                            "ARRAY-DIMENSION",
                            "BIT-VECTOR-P",
                            "CADAAR",
                            "ARRAY-DIMENSION-LIMIT",
                            "BIT-XOR",
                            "CADADR",
                            "ARRAY-DIMENSIONS",
                            "BLOCK",
                            "CADAR",
                            "ARRAY-DISPLACEMENT",
                            "BOOLE",
                            "CADDAR",
                            "ARRAY-ELEMENT-TYPE",
                            "BOOLE-1",
                            "CADDDR",
                            "ARRAY-HAS-FILL-POINTER-P",
                            "BOOLE-2",
                            "CADDR",
                            "ARRAY-IN-BOUNDS-P",
                            "BOOLE-AND",
                            "CADR",
                            "ARRAY-RANK",
                            "BOOLE-ANDC1",
                            "CALL-ARGUMENTS-LIMIT",
                            "ARRAY-RANK-LIMIT",
                            "BOOLE-ANDC2",
                            "CALL-METHOD",
                            "ARRAY-ROW-MAJOR-INDEX",
                            "BOOLE-C1",
                            "CALL-NEXT-METHOD",
                            "ARRAY-TOTAL-SIZE",
                            "BOOLE-C2",
                            "CAR",
                            "ARRAY-TOTAL-SIZE-LIMIT",
                            "BOOLE-CLR",
                            "CASE",
                            "ARRAYP",
                            "BOOLE-EQV",
                            "CATCH",
                            "ASH",
                            "BOOLE-IOR",
                            "CCASE",
                            "ASIN",
                            "BOOLE-NAND",
                            "CDAAAR",
                            "ASINH",
                            "BOOLE-NOR",
                            "CDAADR",
                            "ASSERT",
                            "BOOLE-ORC1",
                            "CDAAR",
                            "ASSOC",
                            "BOOLE-ORC2",
                            "CDADAR",
                            "ASSOC-IF",
                            "BOOLE-SET",
                            "CDADDR",
                            "ASSOC-IF-NOT",
                            "BOOLE-XOR",
                            "CDADR",
                            "ATAN",
                            "BOOLEAN",
                            "CDAR",
                            "ATANH",
                            "BOTH-CASE-P",
                            "CDDAAR",
                            "CDDADR",
                            "CLEAR-INPUT",
                            "COPY-TREE",
                            "CDDAR",
                            "CLEAR-OUTPUT",
                            "COS",
                            "CDDDAR",
                            "CLOSE",
                            "COSH",
                            "CDDDDR",
                            "CLRHASH",
                            "COUNT",
                            "CDDDR",
                            "CODE-CHAR",
                            "COUNT-IF",
                            "CDDR",
                            "COERCE",
                            "COUNT-IF-NOT",
                            "CDR",
                            "COMPILATION-SPEED",
                            "CTYPECASE",
                            "CEILING",
                            "COMPILE",
                            "DEBUG",
                            "CELL-ERROR",
                            "COMPILE-FILE",
                            "DECF",
                            "CELL-ERROR-NAME",
                            "COMPILE-FILE-PATHNAME",
                            "DECLAIM",
                            "CERROR",
                            "COMPILED-FUNCTION",
                            "DECLARATION",
                            "CHANGE-CLASS",
                            "COMPILED-FUNCTION-P",
                            "DECLARE",
                            "CHAR",
                            "COMPILER-MACRO",
                            "DECODE-FLOAT",
                            "CHAR-CODE",
                            "COMPILER-MACRO-FUNCTION",
                            "DECODE-UNIVERSAL-TIME",
                            "CHAR-CODE-LIMIT",
                            "COMPLEMENT",
                            "DEFCLASS",
                            "CHAR-DOWNCASE",
                            "COMPLEX",
                            "DEFCONSTANT",
                            "CHAR-EQUAL",
                            "COMPLEXP",
                            "DEFGENERIC",
                            "CHAR-GREATERP",
                            "COMPUTE-APPLICABLE-METHODS",
                            "DEFINE-COMPILER-MACRO",
                            "CHAR-INT",
                            "COMPUTE-RESTARTS",
                            "DEFINE-CONDITION",
                            "CHAR-LESSP",
                            "CONCATENATE",
                            "DEFINE-METHOD-COMBINATION",
                            "CHAR-NAME",
                            "CONCATENATED-STREAM",
                            "DEFINE-MODIFY-MACRO",
                            "CHAR-NOT-EQUAL",
                            "CONCATENATED-STREAM-STREAMS",
                            "DEFINE-SETF-EXPANDER",
                            "CHAR-NOT-GREATERP",
                            "COND",
                            "DEFINE-SYMBOL-MACRO",
                            "CHAR-NOT-LESSP",
                            "CHARACTER",
                            "CONDITION",
                            "DEFMACRO",
                            "CHAR-UPCASE",
                            "CONJUGATE",
                            "DEFMETHOD",
                            "CHAR/=",
                            "CONS",
                            "DEFPACKAGE",
                            "CHAR<",
                            "CONSP",
                            "DEFPARAMETER",
                            "CHAR<=",
                            "CONSTANTLY",
                            "DEFSETF",
                            "CHAR=",
                            "CONSTANTP",
                            "DEFSTRUCT",
                            "CHAR>",
                            "CONTINUE",
                            "DEFTYPE",
                            "CHAR>=",
                            "CONTROL-ERROR",
                            "DEFUN",
                            "CHARACTER",
                            "COPY-ALIST",
                            "DEFVAR",
                            "CHARACTERP",
                            "COPY-LIST",
                            "DELETE",
                            "CHECK-TYPE",
                            "COPY-PPRINT-DISPATCH",
                            "DELETE-DUPLICATES",
                            "CIS",
                            "COPY-READTABLE",
                            "DELETE-FILE",
                            "CLASS",
                            "COPY-SEQ",
                            "DELETE-IF",
                            "CLASS-NAME",
                            "COPY-STRUCTURE",
                            "DELETE-IF-NOT",
                            "CLASS-OF",
                            "COPY-SYMBOL",
                            "DELETE-PACKAGE",
                            "DENOMINATOR",
                            "EQ",
                            "DEPOSIT-FIELD",
                            "EQL",
                            "DESCRIBE",
                            "EQUAL",
                            "DESCRIBE-OBJECT",
                            "EQUALP",
                            "DESTRUCTURING-BIND",
                            "ERROR",
                            "DIGIT-CHAR",
                            "ETYPECASE",
                            "DIGIT-CHAR-P",
                            "EVAL",
                            "DIRECTORY",
                            "EVAL-WHEN",
                            "DIRECTORY-NAMESTRING",
                            "EVENP",
                            "DISASSEMBLE",
                            "EVERY",
                            "DIVISION-BY-ZERO",
                            "EXP",
                            "DO",
                            "EXPORT",
                            "DO*",
                            "EXPT",
                            "DO-ALL-SYMBOLS",
                            "EXTENDED-CHAR",
                            "DO-EXTERNAL-SYMBOLS",
                            "FBOUNDP",
                            "DO-SYMBOLS",
                            "FCEILING",
                            "DOCUMENTATION",
                            "FDEFINITION",
                            "DOLIST",
                            "FFLOOR",
                            "DOTIMES",
                            "FIFTH",
                            "DOUBLE-FLOAT",
                            "FILE-AUTHOR",
                            "DOUBLE-FLOAT-EPSILON",
                            "FILE-ERROR",
                            "DOUBLE-FLOAT-NEGATIVE-EPSILON",
                            "FILE-ERROR-PATHNAME",
                            "DPB",
                            "FILE-LENGTH",
                            "DRIBBLE",
                            "FILE-NAMESTRING",
                            "DYNAMIC-EXTENT",
                            "FILE-POSITION",
                            "ECASE",
                            "FILE-STREAM",
                            "ECHO-STREAM",
                            "FILE-STRING-LENGTH",
                            "ECHO-STREAM-INPUT-STREAM",
                            "FILE-WRITE-DATE",
                            "ECHO-STREAM-OUTPUT-STREAM",
                            "FILL",
                            "ED",
                            "FILL-POINTER",
                            "EIGHTH",
                            "FIND",
                            "ELT",
                            "FIND-ALL-SYMBOLS",
                            "ENCODE-UNIVERSAL-TIME",
                            "FIND-CLASS",
                            "END-OF-FILE",
                            "FIND-IF",
                            "ENDP",
                            "FIND-IF-NOT",
                            "ENOUGH-NAMESTRING",
                            "FIND-METHOD",
                            "ENSURE-DIRECTORIES-EXIST",
                            "FIND-PACKAGE",
                            "ENSURE-GENERIC-FUNCTION",
                            "FIND-RESTART",
                            "FIND-SYMBOL",
                            "GET-INTERNAL-RUN-TIME",
                            "FINISH-OUTPUT",
                            "GET-MACRO-CHARACTER",
                            "FIRST",
                            "GET-OUTPUT-STREAM-STRING",
                            "FIXNUM",
                            "GET-PROPERTIES",
                            "FLET",
                            "GET-SETF-EXPANSION",
                            "FLOAT",
                            "GET-UNIVERSAL-TIME",
                            "FLOAT-DIGITS",
                            "GETF",
                            "FLOAT-PRECISION",
                            "GETHASH",
                            "FLOAT-RADIX",
                            "GO",
                            "FLOAT-SIGN",
                            "GRAPHIC-CHAR-P",
                            "FLOATING-POINT-INEXACT",
                            "HANDLER-BIND",
                            "FLOATING-POINT-INVALID-OPERATION",
                            "HANDLER-CASE",
                            "FLOATING-POINT-OVERFLOW",
                            "HASH-TABLE",
                            "FLOATING-POINT-UNDERFLOW",
                            "HASH-TABLE-COUNT",
                            "FLOATP",
                            "HASH-TABLE-P",
                            "FLOOR",
                            "HASH-TABLE-REHASH-SIZE",
                            "FMAKUNBOUND",
                            "HASH-TABLE-REHASH-THRESHOLD",
                            "FORCE-OUTPUT",
                            "HASH-TABLE-SIZE",
                            "FORMAT",
                            "HASH-TABLE-TEST",
                            "FORMATTER",
                            "HOST-NAMESTRING",
                            "FOURTH",
                            "IDENTITY",
                            "FRESH-LINE",
                            "IF",
                            "FROUND",
                            "IGNORABLE",
                            "FTRUNCATE",
                            "IGNORE",
                            "FTYPE",
                            "IGNORE-ERRORS",
                            "FUNCALL",
                            "IMAGPART",
                            "FUNCTION",
                            "IMPORT",
                            "FUNCTION-KEYWORDS",
                            "IN-PACKAGE",
                            "FUNCTION-LAMBDA-EXPRESSION",
                            "INCF",
                            "FUNCTIONP",
                            "INITIALIZE-INSTANCE",
                            "GCD",
                            "INLINE",
                            "GENERIC-FUNCTION",
                            "INPUT-STREAM-P",
                            "GENSYM",
                            "INSPECT",
                            "GENTEMP",
                            "INTEGER",
                            "GET",
                            "INTEGER-DECODE-FLOAT",
                            "GET-DECODED-TIME",
                            "INTEGER-LENGTH",
                            "GET-DISPATCH-MACRO-CHARACTER",
                            "INTEGERP",
                            "GET-INTERNAL-REAL-TIME",
                            "INTERACTIVE-STREAM-P",
                            "INTERN",
                            "LISP-IMPLEMENTATION-TYPE",
                            "INTERNAL-TIME-UNITS-PER-SECOND",
                            "LISP-IMPLEMENTATION-VERSION",
                            "INTERSECTION",
                            "LIST",
                            "INVALID-METHOD-ERROR",
                            "LIST*",
                            "INVOKE-DEBUGGER",
                            "LIST-ALL-PACKAGES",
                            "INVOKE-RESTART",
                            "LIST-LENGTH",
                            "INVOKE-RESTART-INTERACTIVELY",
                            "LISTEN",
                            "ISQRT",
                            "LISTP",
                            "KEYWORD",
                            "LOAD",
                            "KEYWORDP",
                            "LOAD-LOGICAL-PATHNAME-TRANSLATIONS",
                            "LABELS",
                            "LOAD-TIME-VALUE",
                            "LAMBDA",
                            "LOCALLY",
                            "LAMBDA-LIST-KEYWORDS",
                            "LOG",
                            "LAMBDA-PARAMETERS-LIMIT",
                            "LOGAND",
                            "LAST",
                            "LOGANDC1",
                            "LCM",
                            "LOGANDC2",
                            "LDB",
                            "LOGBITP",
                            "LDB-TEST",
                            "LOGCOUNT",
                            "LDIFF",
                            "LOGEQV",
                            "LEAST-NEGATIVE-DOUBLE-FLOAT",
                            "LOGICAL-PATHNAME",
                            "LEAST-NEGATIVE-LONG-FLOAT",
                            "LOGICAL-PATHNAME-TRANSLATIONS",
                            "LEAST-NEGATIVE-NORMALIZED-DOUBLE-FLOAT",
                            "LOGIOR",
                            "LEAST-NEGATIVE-NORMALIZED-LONG-FLOAT",
                            "LOGNAND",
                            "LEAST-NEGATIVE-NORMALIZED-SHORT-FLOAT",
                            "LOGNOR",
                            "LEAST-NEGATIVE-NORMALIZED-SINGLE-FLOAT",
                            "LOGNOT",
                            "LEAST-NEGATIVE-SHORT-FLOAT",
                            "LOGORC1",
                            "LEAST-NEGATIVE-SINGLE-FLOAT",
                            "LOGORC2",
                            "LEAST-POSITIVE-DOUBLE-FLOAT",
                            "LOGTEST",
                            "LEAST-POSITIVE-LONG-FLOAT",
                            "LOGXOR",
                            "LEAST-POSITIVE-NORMALIZED-DOUBLE-FLOAT",
                            "LONG-FLOAT",
                            "LEAST-POSITIVE-NORMALIZED-LONG-FLOAT",
                            "LONG-FLOAT-EPSILON",
                            "LEAST-POSITIVE-NORMALIZED-SHORT-FLOAT",
                            "LONG-FLOAT-NEGATIVE-EPSILON",
                            "LEAST-POSITIVE-NORMALIZED-SINGLE-FLOAT",
                            "LONG-SITE-NAME",
                            "LEAST-POSITIVE-SHORT-FLOAT",
                            "LOOP",
                            "LEAST-POSITIVE-SINGLE-FLOAT",
                            "LOOP-FINISH",
                            "LENGTH",
                            "LOWER-CASE-P",
                            "LET",
                            "MACHINE-INSTANCE",
                            "LET*",
                            "MACHINE-TYPE",
                            "MACHINE-VERSION",
                            "MASK-FIELD",
                            "MACRO-FUNCTION",
                            "MAX",
                            "MACROEXPAND",
                            "MEMBER",
                            "MACROEXPAND-1",
                            "MEMBER-IF",
                            "MACROLET",
                            "MEMBER-IF-NOT",
                            "MAKE-ARRAY",
                            "MERGE",
                            "MAKE-BROADCAST-STREAM",
                            "MERGE-PATHNAMES",
                            "MAKE-CONCATENATED-STREAM",
                            "METHOD",
                            "MAKE-CONDITION",
                            "METHOD-COMBINATION",
                            "MAKE-DISPATCH-MACRO-CHARACTER",
                            "METHOD-COMBINATION-ERROR",
                            "MAKE-ECHO-STREAM",
                            "METHOD-QUALIFIERS",
                            "MAKE-HASH-TABLE",
                            "MIN",
                            "MAKE-INSTANCE",
                            "MINUSP",
                            "MAKE-INSTANCES-OBSOLETE",
                            "MISMATCH",
                            "MAKE-LIST",
                            "MOD",
                            "MAKE-LOAD-FORM",
                            "MOST-NEGATIVE-DOUBLE-FLOAT",
                            "MAKE-LOAD-FORM-SAVING-SLOTS",
                            "MOST-NEGATIVE-FIXNUM",
                            "MAKE-METHOD",
                            "MOST-NEGATIVE-LONG-FLOAT",
                            "MAKE-PACKAGE",
                            "MOST-NEGATIVE-SHORT-FLOAT",
                            "MAKE-PATHNAME",
                            "MOST-NEGATIVE-SINGLE-FLOAT",
                            "MAKE-RANDOM-STATE",
                            "MOST-POSITIVE-DOUBLE-FLOAT",
                            "MAKE-SEQUENCE",
                            "MOST-POSITIVE-FIXNUM",
                            "MAKE-STRING",
                            "MOST-POSITIVE-LONG-FLOAT",
                            "MAKE-STRING-INPUT-STREAM",
                            "MOST-POSITIVE-SHORT-FLOAT",
                            "MAKE-STRING-OUTPUT-STREAM",
                            "MOST-POSITIVE-SINGLE-FLOAT",
                            "MAKE-SYMBOL",
                            "MUFFLE-WARNING",
                            "MAKE-SYNONYM-STREAM",
                            "MULTIPLE-VALUE-BIND",
                            "MAKE-TWO-WAY-STREAM",
                            "MULTIPLE-VALUE-CALL",
                            "MAKUNBOUND",
                            "MULTIPLE-VALUE-LIST",
                            "MAP",
                            "MULTIPLE-VALUE-PROG1",
                            "MAP-INTO",
                            "MULTIPLE-VALUE-SETQ",
                            "MAPC",
                            "MULTIPLE-VALUES-LIMIT",
                            "MAPCAN",
                            "NAME-CHAR",
                            "MAPCAR",
                            "NAMESTRING",
                            "MAPCON",
                            "NBUTLAST",
                            "MAPHASH",
                            "NCONC",
                            "MAPL",
                            "NEXT-METHOD-P",
                            "MAPLIST",
                            "NIL",
                            "NINTERSECTION",
                            "PACKAGE-ERROR",
                            "NINTH",
                            "PACKAGE-ERROR-PACKAGE",
                            "NO-APPLICABLE-METHOD",
                            "PACKAGE-NAME",
                            "NO-NEXT-METHOD",
                            "PACKAGE-NICKNAMES",
                            "NOT",
                            "PACKAGE-SHADOWING-SYMBOLS",
                            "NOTANY",
                            "PACKAGE-USE-LIST",
                            "NOTEVERY",
                            "PACKAGE-USED-BY-LIST",
                            "NOTINLINE",
                            "PACKAGEP",
                            "NRECONC",
                            "PAIRLIS",
                            "NREVERSE",
                            "PARSE-ERROR",
                            "NSET-DIFFERENCE",
                            "PARSE-INTEGER",
                            "NSET-EXCLUSIVE-OR",
                            "PARSE-NAMESTRING",
                            "NSTRING-CAPITALIZE",
                            "PATHNAME",
                            "NSTRING-DOWNCASE",
                            "PATHNAME-DEVICE",
                            "NSTRING-UPCASE",
                            "PATHNAME-DIRECTORY",
                            "NSUBLIS",
                            "PATHNAME-HOST",
                            "NSUBST",
                            "PATHNAME-MATCH-P",
                            "NSUBST-IF",
                            "PATHNAME-NAME",
                            "NSUBST-IF-NOT",
                            "PATHNAME-TYPE",
                            "NSUBSTITUTE",
                            "PATHNAME-VERSION",
                            "NSUBSTITUTE-IF",
                            "PATHNAMEP",
                            "NSUBSTITUTE-IF-NOT",
                            "PEEK-CHAR",
                            "NTH",
                            "PHASE",
                            "NTH-VALUE",
                            "PI",
                            "NTHCDR",
                            "PLUSP",
                            "NULL",
                            "POP",
                            "NUMBER",
                            "POSITION",
                            "NUMBERP",
                            "POSITION-IF",
                            "NUMERATOR",
                            "POSITION-IF-NOT",
                            "NUNION",
                            "PPRINT",
                            "ODDP",
                            "PPRINT-DISPATCH",
                            "OPEN",
                            "PPRINT-EXIT-IF-LIST-EXHAUSTED",
                            "OPEN-STREAM-P",
                            "PPRINT-FILL",
                            "OPTIMIZE",
                            "PPRINT-INDENT",
                            "OR",
                            "PPRINT-LINEAR",
                            "OTHERWISE",
                            "PPRINT-LOGICAL-BLOCK",
                            "OUTPUT-STREAM-P",
                            "PPRINT-NEWLINE",
                            "PACKAGE",
                            "PPRINT-POP",
                            "PPRINT-TAB",
                            "READ-CHAR",
                            "PPRINT-TABULAR",
                            "READ-CHAR-NO-HANG",
                            "PRIN1",
                            "READ-DELIMITED-LIST",
                            "PRIN1-TO-STRING",
                            "READ-FROM-STRING",
                            "PRINC",
                            "READ-LINE",
                            "PRINC-TO-STRING",
                            "READ-PRESERVING-WHITESPACE",
                            "PRINT",
                            "READ-SEQUENCE",
                            "PRINT-NOT-READABLE",
                            "READER-ERROR",
                            "PRINT-NOT-READABLE-OBJECT",
                            "READTABLE",
                            "PRINT-OBJECT",
                            "READTABLE-CASE",
                            "PRINT-UNREADABLE-OBJECT",
                            "READTABLEP",
                            "PROBE-FILE",
                            "REAL",
                            "PROCLAIM",
                            "REALP",
                            "PROG",
                            "REALPART",
                            "PROG*",
                            "REDUCE",
                            "PROG1",
                            "REINITIALIZE-INSTANCE",
                            "PROG2",
                            "REM",
                            "PROGN",
                            "REMF",
                            "PROGRAM-ERROR",
                            "REMHASH",
                            "PROGV",
                            "REMOVE",
                            "PROVIDE",
                            "REMOVE-DUPLICATES",
                            "PSETF",
                            "REMOVE-IF",
                            "PSETQ",
                            "REMOVE-IF-NOT",
                            "PUSH",
                            "REMOVE-METHOD",
                            "PUSHNEW",
                            "REMPROP",
                            "QUOTE",
                            "RENAME-FILE",
                            "RANDOM",
                            "RENAME-PACKAGE",
                            "RANDOM-STATE",
                            "REPLACE",
                            "RANDOM-STATE-P",
                            "REQUIRE",
                            "RASSOC",
                            "REST",
                            "RASSOC-IF",
                            "RESTART",
                            "RASSOC-IF-NOT",
                            "RESTART-BIND",
                            "RATIO",
                            "RESTART-CASE",
                            "RATIONAL",
                            "RESTART-NAME",
                            "RATIONALIZE",
                            "RETURN",
                            "RATIONALP",
                            "RETURN-FROM",
                            "READ",
                            "REVAPPEND",
                            "READ-BYTE",
                            "REVERSE",
                            "ROOM",
                            "SIMPLE-BIT-VECTOR",
                            "ROTATEF",
                            "SIMPLE-BIT-VECTOR-P",
                            "ROUND",
                            "SIMPLE-CONDITION",
                            "ROW-MAJOR-AREF",
                            "SIMPLE-CONDITION-FORMAT-ARGUMENTS",
                            "RPLACA",
                            "SIMPLE-CONDITION-FORMAT-CONTROL",
                            "RPLACD",
                            "SIMPLE-ERROR",
                            "SAFETY",
                            "SIMPLE-STRING",
                            "SATISFIES",
                            "SIMPLE-STRING-P",
                            "SBIT",
                            "SIMPLE-TYPE-ERROR",
                            "SCALE-FLOAT",
                            "SIMPLE-VECTOR",
                            "SCHAR",
                            "SIMPLE-VECTOR-P",
                            "SEARCH",
                            "SIMPLE-WARNING",
                            "SECOND",
                            "SIN",
                            "SEQUENCE",
                            "SINGLE-FLOAT",
                            "SERIOUS-CONDITION",
                            "SINGLE-FLOAT-EPSILON",
                            "SET",
                            "SINGLE-FLOAT-NEGATIVE-EPSILON",
                            "SET-DIFFERENCE",
                            "SINH",
                            "SET-DISPATCH-MACRO-CHARACTER",
                            "SIXTH",
                            "SET-EXCLUSIVE-OR",
                            "SLEEP",
                            "SET-MACRO-CHARACTER",
                            "SLOT-BOUNDP",
                            "SET-PPRINT-DISPATCH",
                            "SLOT-EXISTS-P",
                            "SET-SYNTAX-FROM-CHAR",
                            "SLOT-MAKUNBOUND",
                            "SETF",
                            "SLOT-MISSING",
                            "SETQ",
                            "SLOT-UNBOUND",
                            "SEVENTH",
                            "SLOT-VALUE",
                            "SHADOW",
                            "SOFTWARE-TYPE",
                            "SHADOWING-IMPORT",
                            "SOFTWARE-VERSION",
                            "SHARED-INITIALIZE",
                            "SOME",
                            "SHIFTF",
                            "SORT",
                            "SHORT-FLOAT",
                            "SPACE",
                            "SHORT-FLOAT-EPSILON",
                            "SPECIAL",
                            "SHORT-FLOAT-NEGATIVE-EPSILON",
                            "SPECIAL-OPERATOR-P",
                            "SHORT-SITE-NAME",
                            "SPEED",
                            "SIGNAL",
                            "SQRT",
                            "SIGNED-BYTE",
                            "STABLE-SORT",
                            "SIGNUM",
                            "STANDARD",
                            "SIMPLE-ARRAY",
                            "STANDARD-CHAR",
                            "SIMPLE-BASE-STRING",
                            "STANDARD-CHAR-P",
                            "STANDARD-CLASS",
                            "SUBLIS",
                            "STANDARD-GENERIC-FUNCTION",
                            "SUBSEQ",
                            "STANDARD-METHOD",
                            "SUBSETP",
                            "STANDARD-OBJECT",
                            "SUBST",
                            "STEP",
                            "SUBST-IF",
                            "STORAGE-CONDITION",
                            "SUBST-IF-NOT",
                            "STORE-VALUE",
                            "SUBSTITUTE",
                            "STREAM",
                            "SUBSTITUTE-IF",
                            "STREAM-ELEMENT-TYPE",
                            "SUBSTITUTE-IF-NOT",
                            "STREAM-ERROR",
                            "SUBTYPEP",
                            "STREAM-ERROR-STREAM",
                            "SVREF",
                            "STREAM-EXTERNAL-FORMAT",
                            "SXHASH",
                            "STREAMP",
                            "SYMBOL",
                            "STRING",
                            "SYMBOL-FUNCTION",
                            "STRING-CAPITALIZE",
                            "SYMBOL-MACROLET",
                            "STRING-DOWNCASE",
                            "SYMBOL-NAME",
                            "STRING-EQUAL",
                            "SYMBOL-PACKAGE",
                            "STRING-GREATERP",
                            "SYMBOL-PLIST",
                            "STRING-LEFT-TRIM",
                            "SYMBOL-VALUE",
                            "STRING-LESSP",
                            "SYMBOLP",
                            "STRING-NOT-EQUAL",
                            "SYNONYM-STREAM",
                            "STRING-NOT-GREATERP",
                            "SYNONYM-STREAM-SYMBOL",
                            "STRING-NOT-LESSP",
                            "T",
                            "STRING-RIGHT-TRIM",
                            "TAGBODY",
                            "STRING-STREAM",
                            "TAILP",
                            "STRING-TRIM",
                            "TAN",
                            "STRING-UPCASE",
                            "TANH",
                            "STRING/=",
                            "TENTH",
                            "STRING<",
                            "TERPRI",
                            "STRING<=",
                            "THE",
                            "STRING=",
                            "THIRD",
                            "STRING>",
                            "THROW",
                            "STRING>=",
                            "TIME",
                            "STRINGP",
                            "TRACE",
                            "STRUCTURE",
                            "TRANSLATE-LOGICAL-PATHNAME",
                            "STRUCTURE-CLASS",
                            "TRANSLATE-PATHNAME",
                            "STRUCTURE-OBJECT",
                            "TREE-EQUAL",
                            "STYLE-WARNING",
                            "TRUENAME",
                            "TRUNCATE",
                            "VALUES-LIST",
                            "TWO-WAY-STREAM",
                            "VARIABLE",
                            "TWO-WAY-STREAM-INPUT-STREAM",
                            "VECTOR",
                            "TWO-WAY-STREAM-OUTPUT-STREAM",
                            "VECTOR-POP",
                            "TYPE",
                            "VECTOR-PUSH",
                            "TYPE-ERROR",
                            "VECTOR-PUSH-EXTEND",
                            "TYPE-ERROR-DATUM",
                            "VECTORP",
                            "TYPE-ERROR-EXPECTED-TYPE",
                            "WARN",
                            "TYPE-OF",
                            "WARNING",
                            "TYPECASE",
                            "WHEN",
                            "TYPEP",
                            "WILD-PATHNAME-P",
                            "UNBOUND-SLOT",
                            "WITH-ACCESSORS",
                            "UNBOUND-SLOT-INSTANCE",
                            "WITH-COMPILATION-UNIT",
                            "UNBOUND-VARIABLE",
                            "WITH-CONDITION-RESTARTS",
                            "UNDEFINED-FUNCTION",
                            "WITH-HASH-TABLE-ITERATOR",
                            "UNEXPORT",
                            "WITH-INPUT-FROM-STRING",
                            "UNINTERN",
                            "WITH-OPEN-FILE",
                            "UNION",
                            "WITH-OPEN-STREAM",
                            "UNLESS",
                            "WITH-OUTPUT-TO-STRING",
                            "UNREAD-CHAR",
                            "WITH-PACKAGE-ITERATOR",
                            "UNSIGNED-BYTE",
                            "WITH-SIMPLE-RESTART",
                            "UNTRACE",
                            "WITH-SLOTS",
                            "UNUSE-PACKAGE",
                            "WITH-STANDARD-IO-SYNTAX",
                            "UNWIND-PROTECT",
                            "WRITE",
                            "UPDATE-INSTANCE-FOR-DIFFERENT-CLASS",
                            "WRITE-BYTE",
                            "UPDATE-INSTANCE-FOR-REDEFINED-CLASS",
                            "WRITE-CHAR",
                            "UPGRADED-ARRAY-ELEMENT-TYPE",
                            "WRITE-LINE",
                            "UPGRADED-COMPLEX-PART-TYPE",
                            "WRITE-SEQUENCE",
                            "UPPER-CASE-P",
                            "WRITE-STRING",
                            "USE-PACKAGE",
                            "WRITE-TO-STRING",
                            "USE-VALUE",
                            "Y-OR-N-P",
                            "USER-HOMEDIR-PATHNAME",
                            "YES-OR-NO-P",
                            "VALUES",
                            "ZEROP",
                            "BLOCK",
                          }) do
       local symbol = symbol.new(name, clpackage.cl)
       clpackage.cl.external_symbols[name] = symbol
    end
    clpackage.cl.external_symbols["NIL"] = NIL

    return clpackage
#+END_SRC

** Bootstrapping
~init.lua~ is a fairly small file which creates a few objects such as
NIL and T, loads in the other static modules of the system, and then
dynamically stitches them all together.

#+BEGIN_SRC lua :tangle init.lua :noweb yes
  <<NIL>>
  classes = require("classes")
  symbol = require("symbol")
  clpackage = require("clpackage")

  env = {}
  env.packages = {}
  env.packages["COMMON-LISP"] = clpackage.cl
  env.packages.CL = clpackage.cl
  env.classes = {}

  NIL.class = classes.NULL
  for name, class in pairs(classes) do
     local sym = env.packages.CL.external_symbols[name]
     env.classes[sym] = class
     class.name = sym
  end
#+END_SRC
